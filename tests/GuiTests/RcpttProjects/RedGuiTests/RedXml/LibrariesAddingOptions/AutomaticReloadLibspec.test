--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _VwgyEChbEeiftdZfQXkTXA,_hArNQOVGEeWkVpqnVhTYmg
Element-Name: AutomaticReloadLibspec
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _pTFvYOVGEeWkVpqnVhTYmg
Runtime-Version: 2.4.2.201905080442
Save-Time: 8/28/19 11:47 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// open red.xml
with [get-view "Project Explorer" | get-tree] {
    select NewProject | double-click
    select "NewProject/red.xml" | double-click
}
// wait for interpreters
wait-for-loading-red-xml  "NewProject/red.xml" 
  
get-editor "NewProject/red.xml" | get-tab-folder | get-tab-item "Libraries" | click

//add file with functions
set-dialog-result File "platform:/resource/NewProject/only_function.py"
get-editor "NewProject/red.xml" | get-section "Libraries" | get-tree | get-item "...add new library file" | double-click
get-editor "NewProject/red.xml" | get-section "Libraries" | get-tree | key-type "M1+s"


//wait for Referenced libs - by default collapsed
try -times 5 -delay 1000 -command{
	get-view "Project Explorer" | get-tree | get-item "NewProject/Robot Referenced libraries" 
       | get-property "getExpanded()" | equals false | verify-true
}

//check PE
get-view "Project Explorer" | get-tree | get-item "NewProject/Robot Referenced libraries" | get-property childCount 
    | equals 1 | verify-true
 
get-view "Project Explorer" | get-tree 
	| get-item "NewProject/Robot Referenced libraries/only_function NewProject\\/only_function.py (1)" | expand-all
	
get-view "Project Explorer" | get-tree 
    | get-item -path "NewProject/Robot Referenced libraries/only_function NewProject\\/only_function.py \\(1\\)/Flower" 
    | get-property index | equals 0 | verify-true
    
// change function name and add one more    
get-view "Project Explorer" | get-tree | select "NewProject/only_function.py" | get-menu "Open With/Text Editor" 
    | click
    

//remove all
with [get-editor "only_function.py" | get-text-viewer] {
    set-caret-pos 1 1
    key-type "M1+a"
    key-type Del
}

//expand Standard libs
get-view "Project Explorer" | get-tree 
    | get-item "NewProject/Robot Standard libraries \[Robot Framework .*\]/DateTime.*" | expand
    
    
//add 2 new functions
get-editor "only_function.py" | get-text-viewer | set-text "def Laptop():\n"
    + "\t\"\"\"Laptop keyword\n"
    + "\t\"\"\"\n"
    + "\treturn 77\n"
    + "\t\n"
    + "def PC():\n"
    + "\t\"\"\"PC keyword\n"
    + "\t\"\"\"\n"
    + "\treturn 99"
	    
with [get-editor "only_function.py" | get-text-viewer] {
    key-type "M1+s"
}


try -times 5 -delay 1000 -command{
	verify-error {get-window "Progress Information" | get-property enablement | equals false | verify-true}
}


with [get-view "Project Explorer" | get-tree] {
    get-item 
        -path "NewProject/Robot Standard libraries \\[Robot Framework .*\\]/DateTime \\(.*\\)" 
        | get-property "getExpanded()" | equals true | verify-true
    get-item 
        -path "NewProject/Robot Standard libraries \\[Robot Framework .*\\]/Reserved \\(.*\\)" 
        | get-property "getExpanded()" | equals false | verify-true    
        
    get-item -path "NewProject/Robot Referenced libraries/only_function NewProject\\/only_function.py (2)"
        | get-property "getExpanded()" | equals false | verify-true
    
}


//add file with class
get-tab-folder -index 1 | get-tab-item "NewProject/red.xml" | click
set-dialog-result File "platform:/resource/NewProject/here_is_class.py"
get-editor "NewProject/red.xml" |  get-section "Libraries" | get-tree | get-item "...add new library file" | double-click

// verify Select library class items list
get-window "Select library class" | get-table | select "here_is_class"
with [get-window "Select library class" | get-control Any -index 1] {
    get-property "getChildren().Control[2].getChildren().Control[0].getItems().TableItem[0].getText()" 
        | equals "here_is_class" | verify-true
    get-property "getChildren().Control[2].getChildren().Control[0].getItems().TableItem[1].getText()" 
        | equals "here_is_class.Cat" | verify-true
    get-property "getChildren().Control[2].getChildren().Control[0].getItems().TableItem[2].getText()" 
        | equals "here_is_class.Dog" | verify-true
}

get-window "Select library class" | get-table | select "here_is_class.Dog" | click -default
get-editor "NewProject/red.xml" | get-section "Libraries" | get-tree | key-type "M1+s"

//remove class Cat
get-view "Project Explorer" | get-tree | select "NewProject/here_is_class.py" | get-menu "Open With/Text Editor" 
    | click
with [get-editor "here_is_class.py" | get-text-viewer] {
    set-caret-pos 10 5
    select-range 11 5 4 1
    key-type BackSpace
    key-type "M1+s"
}
//check that is now only one keyword
with [get-view "Project Explorer" | get-tree] {
    get-item "NewProject/Robot Referenced libraries" | get-property childCount | equals 2 | verify-true
    get-item -path "NewProject/Robot Referenced libraries/here_is_class.Dog NewProject\\/here_is_class.py \\(1\\)/Lessie" 
    | get-property caption | equals Lessie | verify-true
}
//rest is not changed
with [get-view "Project Explorer" | get-tree] {
    get-item -path "NewProject/Robot Referenced libraries/only_function NewProject\\/only_function.py \\(2\\)/Laptop" 
        | get-property caption | equals Laptop | verify-true
    get-item -path "NewProject/Robot Referenced libraries/only_function NewProject\\/only_function.py \\(2\\)/PC" 
        | get-property caption | equals PC | verify-true
}

//change class name to Dog2
with [get-editor "here_is_class.py" | get-text-viewer] {
    set-caret-pos 8 10
    type-text 2

}

check-error-for-libspec -lib_name  "here_is_class.Dog" -path "NewProject[\\\\/]here_is_class.py" -file_name "here_is_class.py" 
	-problem "Importing test library 'here_is_class.Dog' failed: Module 'here_is_class' does not contain 'Dog'."

with [get-editor "here_is_class.py" | get-text-viewer] {
    set-caret-pos 12 22
    key-type Enter
}
check-error-for-libspec -lib_name  "here_is_class.Dog" -path "NewProject[\\\\/]here_is_class.py" -file_name "here_is_class.py" 
	-problem "Importing test library 'here_is_class.Dog' failed: Module 'here_is_class' does not contain 'Dog'."


//check that libery is not-accesible
get-view "Project Explorer" | get-tree | get-item 
    -path "NewProject/Robot Referenced libraries/here_is_class.Dog NewProject\\/here_is_class.py \\(non-accessible\\)" 
    | get-property index | equals 0 | verify-true
    
// revert to class name Dog 
with [get-editor "here_is_class.py" | get-text-viewer] {
    set-caret-pos 8 11
    key-type BackSpace
    key-type "M1+s"
}

// check that lib is generated
try -times 3 -delay 500 -command{
	get-view "Project Explorer" | get-tree 
	    | get-item "NewProject/Robot Referenced libraries/here_is_class.Dog NewProject\\/here_is_class.py \\(1\\)/Lessie" 
	    | get-property index | equals 0 | verify-true
}    
// add file with import    
get-tab-folder -index 1 | get-tab-item "NewProject/red.xml" | click
set-dialog-result File "platform:/resource/NewProject/imports/test.py"
get-editor "NewProject/red.xml" | get-section "Libraries" | get-tree | get-item "...add new library file" | double-click
get-editor "NewProject/red.xml" | get-section "Libraries" | get-tree | select "here_is_class.Dog - NewProject\\/here_is_class.py"
    | key-type "M1+s"
    
//check PE
with [get-view "Project Explorer" | get-tree] {
    get-item 
        -path "NewProject/Robot Referenced libraries/here_is_class.Dog NewProject\\/here_is_class.py \\(1\\)/Lessie" 
        | get-property index | equals 0 | verify-true
    get-item -path "NewProject/Robot Referenced libraries/only_function NewProject\\/only_function.py \\(2\\)" 
        | get-property "getItems().TreeItem[0].getText()" | equals Laptop | verify-true
    get-item -path "NewProject/Robot Referenced libraries/only_function NewProject\\/only_function.py \\(2\\)" 
        | get-property "getItems().TreeItem[1].getText()" | equals PC | verify-true
    get-item -path "NewProject/Robot Referenced libraries/test NewProject\\/imports\\/test.py \\(1\\)/Perfect" 
        | get-property index | equals 0 | verify-true
}


// open file that is imported and change function name    
get-view "Project Explorer" | get-tree | select "NewProject/imports/file_to_import.py" 
    | get-menu "Open With/Text Editor" | click
with [get-editor "file_to_import.py" | get-text-viewer] {
    set-caret-pos 1 9
    type-text 67
    key-type "M1+s"
}
  
//check PE    
with [get-view "Project Explorer" | get-tree] {
    get-item -path "NewProject/Robot Referenced libraries/test NewProject\\/imports\\/test.py \\(1\\)" 
        | get-property "getItems().length" | equals 1 | verify-true
    get-item -path "NewProject/Robot Referenced libraries/test NewProject\\/imports\\/test.py \\(1\\)" 
        | get-property "getItems().TreeItem[0].getText()" | equals Perfect | verify-true
}

// add file with class
get-tab-folder -index 1 | get-tab-item "NewProject/red.xml" | click
set-dialog-result File "platform:/resource/NewProject/imports/MainClass.py"
get-editor "NewProject/red.xml" | get-section "Libraries" | get-tree | get-item "...add new library file" | double-click
get-editor "NewProject/red.xml" | get-section "Libraries" | get-tree |  key-type "M1+s"

//chage method in class that is imported
get-view "Project Explorer" | get-tree | select "NewProject/imports/class_to_import.py" 
    | get-menu "Open With/Text Editor" | click
with [get-editor "class_to_import.py" | get-text-viewer] {
    set-caret-pos 5 16
    key-type BackSpace
    type-text 34
    key-type "M1+s"
}

// check that is no changes in PE
with [get-view "Project Explorer" | get-tree] {
    get-item -path "NewProject/Robot Referenced libraries/here_is_class.Dog NewProject\\/here_is_class.py \\(1\\)" 
        | get-property index | equals 0 | verify-true
    get-item -path "NewProject/Robot Referenced libraries/MainClass NewProject\\/imports\\/MainClass.py \\(1\\)" 
        | get-property index | equals 1 | verify-true
    get-item -path "NewProject/Robot Referenced libraries/only_function NewProject\\/only_function.py \\(2\\)" 
        | get-property index | equals 2 | verify-true
    get-item -path "NewProject/Robot Referenced libraries/test NewProject\\/imports\\/test.py \\(1\\)" 
        | get-property index | equals 3 | verify-true
}

get-tab-folder -index 1 |  get-tab-item "class_to_import.py" | click

with [get-editor "class_to_import.py" | get-text-viewer] {
    set-caret-pos 1 18
    type-text 2
    key-type "M1+s"
}
get-view "Project Explorer" | get-tree | select "NewProject/imports/MainClass.py" 
    | select "NewProject/imports/MainClass.py" | select "NewProject/imports/MainClass.py" 
    | get-menu "Open With/Text Editor" | click
    
with [get-editor "MainClass.py" | get-text-viewer] {
    set-caret-pos 11 20
    key-type "NUMPAD_ENTER" "\\u000D"
}

get-editor "MainClass.py" | get-text-viewer | set-caret-pos 12 7

exec-with-options {
    get-editor "MainClass.py" | get-text-viewer | key-type "M1+s"
     get-window "Problem Occurred" | get-button "Details >>" | click
    get-window "Problem Occurred" | get-editbox -after [get-label "See 'Details' for more information."] 
        | get-property text
        | equals "Library specification generation problem\n\n"
        + "Problem occurred during generating libdoc for 'MainClass' library located at '.*NewProject[\\\\/]imports[\\\\/]MainClass.py'.\n"
        + "Following exception has been thrown:\n"
        + "            Exception: Importing test library '.*NewProject[\\\\/]imports[\\\\/]MainClass.py' failed: ImportError: cannot import name SimpleClass\n"
        + "            Traceback \(most recent call last\):\n"
        + "              File \".*NewProject[\\\\/]imports[\\\\/]MainClass.py\", line 1, in <module>\n"
        + "                from class_to_import import SimpleClass\n"
        + "            PYTHONPATH:\n"
        + "              (.*\n)*"
        + "            Try --help for usage information." | verify-true
	 get-window "Problem Occurred" | get-button OK | click
} -allowStatusDialog

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
