--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _d8aMACuvEeW667Afdo4DcA,_2Q6oEPOSEeaWpbE3jg39cA,_jcbUQGu1Eeeps9cepQRw2Q
Element-Name: DebugForFailingKeyword
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _2-5uENShEemgX-SoeSm2iQ
Runtime-Version: 2.4.2.201905080442
Save-Time: 9/18/19 11:15 AM
Tags: Debug
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

get-view "Project Explorer" | get-tree | select "RobotProject/TestFile.robot" | double-click

//set text 
get-editor "TestFile.robot" | get-text-viewer | set-text "*** Setting ***\n"
    + "Library    Collections    WITH NAME    lol\n"
    + "*** Test Cases ***\n"
    + "tc 1\n"
    + "    Log    message    \n"
    + "    Should Be Equal    4    4 \n"
    + "    Should Be Equal    4    5        \n"
    + "    lol.Convert To List    \n"
    + "     \n"
    + "tc 2\n"
    + "   Should Be Equal As Strings    7    8\n"
    + "   Log  9  \n"
    + "      \n\n"
    + "tc 3\n"
    + "    Should Be Equal As Integers   9    10  \n"
    + "    Convert To String    text123\n\n"
    + "tc 4\n"
    + "    Should Be Equal    12    13  \n"
    + "    \n"
    + "tc 5\n"
    + "    log  9\n"
    + "    lol.Convert To List\n"
    + "   \n"
    + "tc 6\n"
    + "     abc4ef be equal\n"
    + "     \n"
    + "*** Keywords ***\n"
    + "abc4ef be equal\n"
    + "    fail  \" i will fail\""
    
get-editor "TestFile.robot" | get-text-viewer | key-type "M1+s"

// go to Breakpoint tab in Debug perspective
get-button "Open Perspective" | click
get-window "Open Perspective" | get-table | select Debug | double-click

// check if button exists
get-view Breakpoints | click
with [get-view Breakpoints | get-button "Add Robot Keyword Fail Breakpoint"] {
    get-property enablement | equals true | verify-true
    get-property selected | equals false | verify-true
}

// add new default BP
get-view Breakpoints | get-button "Add Robot Keyword Fail Breakpoint" | click
with [get-window "Add new keyword failed breakpoint"] {
    get-label "Define a keyword name which will pause the execution once the matching keyword fails. Use '?' for any character or '*' for any string." 
        | get-property caption 
        | equals "Define a keyword name which will pause the execution once the matching keyword fails. Use '?' for any character or '*' for any string." 
        | verify-true
    with [get-editbox 
        -after [get-label "Define a keyword name which will pause the execution once the matching keyword fails. Use '?' for any character or '*' for any string."]] {
        get-property text | equals Keyword | verify-true
        get-property "getEditable()" | equals true | verify-true
    }
}
get-window "Add new keyword failed breakpoint"| get-button OK | click

//add new BP
get-view Breakpoints | get-button "Add Robot Keyword Fail Breakpoint" | click

// error tah this KW is already in view
with [get-window "Add new keyword failed breakpoint"] {
    with [get-editbox 
        -after [get-label "Define a keyword name which will pause the execution once the matching keyword fails. Use '?' for any character or '*' for any string."]] {
        get-property "decorators[0].visible" | equals true | verify-true
        get-property "decorators[0].description" | equals "There is already breakpoint defined for 'Keyword' name" 
            | verify-true
    }
    get-button OK | get-property enablement | equals false | verify-true
}

// remove all text
get-window "Add new keyword failed breakpoint" | get-editbox 
    -after [get-label "Define a keyword name which will pause the execution once the matching keyword fails. Use '?' for any character or '*' for any string."] 
    | set-text ""
    
// check error    
with [get-window "Add new keyword failed breakpoint" | get-editbox 
    -after [get-label "Define a keyword name which will pause the execution once the matching keyword fails. Use '?' for any character or '*' for any string."]] {
    get-property "decorators[0].visible" | equals true | verify-true
    get-property "decorators[0].description" | equals "Keyword name cannot be empty" | verify-true
}

// add should be equal
with [get-window "Add new keyword failed breakpoint"] {
    get-editbox 
        -after [get-label "Define a keyword name which will pause the execution once the matching keyword fails. Use '?' for any character or '*' for any string."] 
        | set-text "Should be equal"
    get-button OK | click
}

// check if was added to view
with [get-view Breakpoints | get-tree] {
    get-property "getItems().TreeItem[0].getText()" | equals "Keyword 'Keyword' fails" | verify-true
    get-property "getItems().TreeItem[1].getText()" | equals "Keyword 'Should be equal' fails" | verify-true
}

exec-with-options -disableJobWaiting -command {
	get-view "Project Explorer" | get-tree | select "RobotProject/TestFile.robot" | get-menu -path "Debug As/1 Robot Test" 
	    | click
	wait-for-specific-nr-of-threads -nr_items_in_thread 3
	check-debug-marker-on-ruler -line 7 -script_name "TestFile.robot" 
	
	get-button "Resume (F8)" | click
	wait-for-specified_line-in-first-thread -line 20 -nr_of_frames 3
	check-debug-marker-on-ruler -line 20 -script_name "TestFile.robot" 
	get-button "Resume (F8)" | click
}


// add regex
get-view Breakpoints | get-editbox -after [get-label "Keyword pattern:"] | set-text "Should be *"
wait 300
get-button "Save (M1+S)" | click
get-view Console | get-button "Clear Console" | click

exec-with-options -disableJobWaiting -command {
	get-button "Debug.*" | click
	wait-for-specific-nr-of-threads -nr_items_in_thread 3
	
	check-debug-marker-on-ruler -line 7 -script_name "TestFile.robot" 
	
	get-button "Resume (F8)" | click
	wait-for-specified_line-in-first-thread -line 11 -nr_of_frames 3
	check-debug-marker-on-ruler -line 11 -script_name "TestFile.robot" 
	
	get-button "Resume (F8)" | click
	wait-for-specified_line-in-first-thread -line 16 -nr_of_frames 3
	check-debug-marker-on-ruler -line 16 -script_name "TestFile.robot" 
	
	get-button "Resume (F8)" | click
	wait-for-specified_line-in-first-thread -line 20 -nr_of_frames 3
	check-debug-marker-on-ruler -line 20 -script_name "TestFile.robot" 
	
	get-button "Resume (F8)" | click
}

// add Kw that has alias
get-view Breakpoints | get-button "Add Robot Keyword Fail Breakpoint" | click
with [get-window "Add new keyword failed breakpoint"] {
    get-editbox 
        -after [get-label "Define a keyword name which will pause the execution once the matching keyword fails. Use '?' for any character or '*' for any string."] 
        | set-text "Convert to List"
    get-button OK | click
}

get-view Breakpoints | get-tree |  get-property itemCount | equals 3 | verify-true

// remove old BP
with [get-view Breakpoints] {
    get-tree | select "Keyword 'Should be *' fails"
    get-button "Remove Selected Breakpoints (Delete)" | click

    get-tree | select "Keyword 'Keyword' fails"
    get-button "Remove Selected Breakpoints (Delete)" | click
}
with [get-view Breakpoints | get-tree] {
    get-property itemCount | equals 1 | verify-true
    get-property "getItems().TreeItem[0].getText()" | equals "Keyword 'Convert to List' fails" | verify-true
}

exec-with-options -disableJobWaiting -command {
	get-button "Debug.*" | click
	wait-for-specific-nr-of-threads -nr_items_in_thread 3
	
	check-debug-marker-on-ruler -line 24 -script_name "TestFile.robot" 
	
	get-button "Resume (F8)" | click
}

// add regex
with [get-view Breakpoints] {
    get-editbox -after [get-label "Keyword pattern:"] | set-text "?????? be equal"
    get-button "Hit count:" | uncheck
}
get-button "Save (M1+S)" | click
get-view Breakpoints | get-tree | get-item -path "Keyword '?????? be equal' fails" | get-property caption 
    | equals "Keyword '?????? be equal' fails" | verify-true
    
    
// run debug    
exec-with-options -disableJobWaiting -command {
	get-button "Debug.*" | click
	wait-for-specific-nr-of-threads -nr_items_in_thread 3
	
	check-debug-marker-on-ruler -line 7 -script_name "TestFile.robot" 
	
	get-button "Resume (F8)" | click
	wait-for-specified_line-in-first-thread -line 20 -nr_of_frames 3
	check-debug-marker-on-ruler -line 20 -script_name "TestFile.robot" 
	
	get-button "Resume (F8)" | click
	wait-for-specified_line-in-first-thread -line 27 -nr_of_frames 3
	check-debug-marker-on-ruler -line 27 -script_name "TestFile.robot" 
	
	get-button "Resume (F8)" | click
}	

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
